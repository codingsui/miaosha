<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/context
              http://www.springframework.org/schema/context/spring-context-4.2.xsd"
>

    <!-- 配置整合mybatis -->
    <!-- 1.配置数据库 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--&lt;!&ndash; 2.数据库连接池 &ndash;&gt;-->
    <!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">-->
        <!--<property name="driverClass" value="${drive}"/>-->
        <!--<property name="jdbcUrl" value="${url}"/>-->
        <!--<property name="user" value="${username}"/>-->
        <!--<property name="password" value="${password}"/>-->

        <!--&lt;!&ndash; 当连接池耗尽时候，一次获得连接数&ndash;&gt;-->
        <!--<property name="acquireIncrement" value="5" />-->
        <!--<property name="maxStatements" value="0" />-->
        <!--&lt;!&ndash; 当连接池连接耗尽时，客户端getConnection(),所等待的时间&ndash;&gt;-->
        <!--<property name="checkoutTimeout" value="20000"/>-->
        <!--<property name="idleConnectionTestPeriod" value="120" />-->
        <!--&lt;!&ndash; 当连接失效时，获得连接的次数，0为无限次（重连）&ndash;&gt;-->
        <!--<property name="acquireRetryAttempts" value="30" />-->
    <!--</bean>-->
    <!-- 2.数据库连接池 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" >
        <property name="driverClassName" value="${db.driverClassName}"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
        <!-- 连接池启动时的初始值 -->
        <property name="initialSize" value="${db.initialSize}"/>
        <!-- 连接池的最大值 -->
        <property name="maxActive" value="${db.maxActive}"/>
        <!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
        <property name="maxIdle" value="${db.maxIdle}"/>
        <!-- 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
        <property name="minIdle" value="${db.minIdle}"/>
        <!-- 最大建立连接等待时间。如果超过此时间将接到异常。设为－1表示无限制 -->
        <property name="maxWait" value="${db.maxWait}"/>
        <!--#给出一条简单的sql语句进行验证 -->
        <!--<property name="validationQuery" value="select getdate()" />-->
        <property name="defaultAutoCommit" value="${db.defaultAutoCommit}"/>
        <!-- 回收被遗弃的（一般是忘了释放的）数据库连接到连接池中 -->
        <!--<property name="removeAbandoned" value="true" />-->
        <!-- 数据库连接过多长时间不用将被视为被遗弃而收回连接池中 -->
        <!--<property name="removeAbandonedTimeout" value="120" />-->
        <!-- #连接的超时时间，默认为半小时。 -->
        <property name="minEvictableIdleTimeMillis" value="${db.minEvictableIdleTimeMillis}"/>

        <!--# 失效检查线程运行时间间隔，要小于MySQL默认-->
        <property name="timeBetweenEvictionRunsMillis" value="40000"/>
        <!--# 检查连接是否有效-->
        <property name="testWhileIdle" value="true"/>
        <!--# 检查连接有效性的SQL语句-->
        <property name="validationQuery" value="SELECT 1"/>
        <!--指明是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个.-->
        <property name="testOnBorrow" value="true"/>

    </bean>
    <!-- 3.配置sqlSessionFactory对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!--全局配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 扫描entrity包 使用别名 -->
        <property name="typeAliasesPackage" value="com.syl.entity"/>
        <!-- 扫描sql配置文件：mapper文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!-- 4.配置扫描Dao接口包，动态是Dao接口，注入到spring容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFaction -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 给出扫描dao接口包 -->
        <property name="basePackage" value="com.syl.dao"/>
    </bean>

    <!-- -->
    <bean id="redisDao" class="com.syl.dao.cache.RedisDao">
        <constructor-arg index="0" value="119.29.103.39"/>
        <constructor-arg index="1" value="6379"/>
    </bean>
</beans>